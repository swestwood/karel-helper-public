var DIRECTION_CLASSES=["north","west","south","east"],TURN_DELAY=100,BEEPER_OFFSET=15,WALL_SIZE_OFFSET=4,MAX_WORLD_SIZE=30,mouseMode="KAREL",worldHeight=8,worldWidth=8,startingWorldName="HospitalKarel",karelRow=worldHeight-1,karelCol=0,karelDirection=3,beepersInBag=-1,squareSize=50,beeperMap={},wallMapHorizontal={},wallMapVertical={},$=u;function initializeWorld(a){var b=function(b,c,d,e,f){!a&&b[d]&&e<b[d].length?c[d].push(b[d][e]):c[d].push(f)},c=beeperMap,d=wallMapHorizontal,e=wallMapVertical;beeperMap={},wallMapVertical={},wallMapHorizontal={};for(var f=0;f<worldHeight;f++){beeperMap[f]=[],wallMapVertical[f]=[],wallMapHorizontal[f]=[];for(var g=0;g<worldWidth;g++)b(c,beeperMap,f,g,0),b(d,wallMapHorizontal,f,g,0),b(e,wallMapVertical,f,g,0)}karelCol>=worldWidth&&(karelCol=worldWidth-1),karelRow>=worldHeight&&(karelRow=worldHeight-1);var h=$(".landscape");h.empty();for(var g=0;g<worldWidth;g++){var i="col-"+g,j=$("<div class='col "+i+"'></div>");h.append(j);for(var k,f=0;f<worldHeight;f++)k=$("<div class='square "+getSquareClass(f,g)+"'>+</div>"),j.append(k)}$(".world-width").nodes[0].value=worldWidth,$(".world-height").nodes[0].value=worldHeight}function getSquareClass(a,b){return"square-"+a+"-"+b}function updateWorldSize(a,b,c){worldWidth=a,worldHeight=b,initializeWorld(c),refresh()}function refresh(){drawBeepers(),drawWalls(),drawKarel()}function drawKarel(){var a=karelRow*squareSize,b=karelCol*squareSize,c=$(".karel");c.attr("style","top: "+a+"; left: "+b);for(var d=0;d<DIRECTION_CLASSES.length;d++)c.removeClass(DIRECTION_CLASSES[d]);c.addClass(DIRECTION_CLASSES[karelDirection])}function drawBeepers(){var a=$(".beepers");a.empty();for(var b=0;b<worldHeight;b++)for(var c,d=0;d<worldWidth;d++)if(c=beeperMap[b][d],0<c){var e=1<c?c:"",f=$("<div class='beeper'><div class='beeper-count'>"+e+"</div></div>"),g=b*squareSize+BEEPER_OFFSET,h=d*squareSize+BEEPER_OFFSET;f.attr("style","top: "+g+"; left: "+h),a.append(f)}0<=beepersInBag?$(".beepers-in-bag-count").nodes[0].value=beepersInBag:($(".beepers-in-bag-count").nodes[0].value="",$(".beepers-in-bag-count").nodes[0].placeholder="Unlimited"),$(".beeper-bag-label").text(1==beepersInBag?"beeper in bag":"beepers in bag")}function drawWalls(){var a=$(".walls");a.empty();for(var b=squareSize-WALL_SIZE_OFFSET,c=0;c<worldHeight;c++)for(var d=0;d<worldWidth;d++){var e=wallMapHorizontal[c][d],f=wallMapVertical[c][d];if(e){var g=$("<div class='wall horizontal'></div>"),h=c*squareSize,i=d*squareSize;g.attr("style","top: "+h+"; left: "+i+"; width: "+b),a.append(g)}if(f){var g=$("<div class='wall vertical'></div>"),h=c*squareSize,i=d*squareSize;g.attr("style","top: "+h+"; left: "+i+"; height: "+b),a.append(g)}}}function inBounds(a){return 0<=a&&a<worldHeight&&0<=karelCol&&karelCol<worldWidth}function checkCollisions(a,b,c){var d=Math.max,e=!1;inBounds(karelRow,karelCol)?!c&&(a!=karelRow&&b==karelCol?wallMapHorizontal[d(a,karelRow)][karelCol]&&(e=!0):a==karelRow&&b!=karelCol?wallMapVertical[karelRow][d(b,karelCol)]&&(e=!0):console.log("Wall collision check skipped.")):e=!0,e&&(setError("\u26D4 Crash! Karel hit a wall! \u26D4"),karelRow=a,karelCol=b)}function clearErrors(){$(".errors").empty()}function move(){clearErrors();var a=DIRECTION_CLASSES[karelDirection],b=karelRow,c=karelCol;"north"==a?karelRow-=1:"south"==a?karelRow+=1:"east"==a?karelCol+=1:"west"==a&&(karelCol-=1),checkCollisions(b,c),refresh()}function moveTo(a,b,c){clearErrors();var d=karelRow,e=karelCol;karelRow=a,karelCol=b,checkCollisions(d,e,c),refresh()}function setError(a){$(".errors").text(a)}function turnLeft(){clearErrors(),karelDirection=(karelDirection+1)%DIRECTION_CLASSES.length,refresh()}function turnRight(){turnLeft(),setTimeout(function(){turnLeft(),setTimeout(function(){turnLeft()},TURN_DELAY)},TURN_DELAY)}function turnAround(){turnLeft(),setTimeout(function(){turnLeft()},TURN_DELAY)}function putBeeper(){clearErrors(),0==beepersInBag?setError("\uD83D\uDEABOh no! Beeper bag is empty! \uD83D\uDEAB"):(addBeeperToWorld(karelRow,karelCol),beepersInBag-=1),refresh()}function setKarelDirection(a){var b=DIRECTION_CLASSES.indexOf(a);-1==b?console.error("Invalid direction: "+a):(karelDirection=b,refresh())}function addBeeperToWorld(a,b){beeperMap[a][b]+=1,refresh()}function removeBeeperFromWorld(a,b){return 1>beeperMap[a][b]?void setError("\u2757There's no beeper here to remove. \u2757"):void(beeperMap[a][b]-=1,refresh())}function pickBeeper(){clearErrors(),1>beeperMap[karelRow][karelCol]?setError("\u2757Yikes! There's no beeper here! \u2757"):(removeBeeperFromWorld(karelRow,karelCol),0<=beepersInBag&&(beepersInBag+=1)),refresh()}function addWallToWorld(a,b,c){inBounds(b,c)&&("vertical"==a?wallMapVertical[b][c]=1:"horizontal"==a&&(wallMapHorizontal[b][c]=1),refresh())}function removeWallFromWorld(a,b,c){inBounds(b,c)&&("vertical"==a?wallMapVertical[b][c]=0:"horizontal"==a&&(wallMapHorizontal[b][c]=0),refresh())}function updateMouseMode(a,b){$("button.ongoing").removeClass("ongoing");var c=mouseMode;if(laserPointerOff(),-1!=["PLACE_BEEPER","REMOVE_BEEPER","ADD_WALL","REMOVE_WALL","LASER_POINTER","HIGHLIGHT_SQUARES"].indexOf(a)){if(c==a)return mouseMode="KAREL",void $("body").attr("style","cursor: normal");b&&b.addClass("ongoing"),"LASER_POINTER"==a?$("body").attr("style","cursor: none"):$("body").attr("style","cursor: crosshair"),mouseMode=a}else $("body").attr("style","cursor: normal"),mouseMode=a}function setupWorldFromMap(a){var b=function(a){var b=a.trim().slice(1,-1).split(",");return[parseInt(b[0].trim()),parseInt(b[1].trim())]},c=function(a){var c=a.split(";");if(2!=c.length)return void console.error("Couldn't parse: "+a);var d=b(c[0]);return d.push(c[1].trim()),d};a=a.toLowerCase();for(var d,e,f,g=a.split("\n"),h=-1,k=[],l=[],m=[],n=0;n<g.length;n++){var o=g[n],p=o.split(":"),q=p[0],r=1<p.length?p[1].trim():"";if("dimension"==q){var s=b(r);e=s[0],d=s[1]}else if("beeper"==q){var t=c(r),v=[d-t[1],t[0]-1,parseInt(t[2])];k.push(v)}else if("wall"==q){var t=c(r);if("north"==t[2]){var v=[d-t[1],t[0]-1];l.push(v)}else if("south"==t[2]){var v=[d-t[1]+1,t[0]-1];l.push(v)}else if("west"==t[2]){var v=[d-t[1],t[0]-1];m.push(v)}else if("east"==t[2]){var v=[d-t[1],t[0]];m.push(v)}}else if("beeperbag"==q)h="infinity"==r?-1:parseInt(r);else if("karel"==q){var t=c(r);f=[d-t[1],t[0]-1,t[2]]}}if(!d||!e)throw setError("Could not parse the map's dimensions."),"Could not parse map dimensions";updateWorldSize(e,d,!0);for(var w,n=0;n<k.length;n++){w=k[n];for(var x=0;x<w[2];x++)addBeeperToWorld(w[0],w[1])}for(var w,n=0;n<m.length;n++)w=m[n],addWallToWorld("vertical",w[0],w[1]);for(var w,n=0;n<l.length;n++)w=l[n],addWallToWorld("horizontal",w[0],w[1]);karelRow=f[0],karelCol=f[1],setKarelDirection(f[2]),beepersInBag=h,refresh()}function loadKarelMapFile(a){var b=new FileReader;b.onload=function(a){var b=a.target.result;try{setupWorldFromMap(b)}catch(a){logging.error(a),setError("Error while trying to load this world.")}},b.onerror=function(a){setError("File could not be read! Code "+a.target.error.code)},b.readAsText(a)}function parseWorldDimensions(){var a,b;try{a=parseInt($(".world-width").nodes[0].value.trim()),b=parseInt($(".world-height").nodes[0].value.trim())}catch(a){console.error("Invalid input for height/width")}0<a&&0<b&&a<MAX_WORLD_SIZE&&b<MAX_WORLD_SIZE?updateWorldSize(a,b):setError("World dimensions must be between 1 and "+MAX_WORLD_SIZE)}function highlightSquaresTriggered(){updateMouseMode("HIGHLIGHT_SQUARES",$(".highlight-squares"))}function laserPointerTriggered(){updateMouseMode("LASER_POINTER",$(".laser-button"))}function laserPointerOff(){$(".laser-pointer").attr("style","display: none"),$("body").attr("style","cursor: normal")}document.addEventListener("DOMContentLoaded",function(){for(var a in availableWorlds){var b=a==startingWorldName?"selected":"";$("select.select-available-world").append($("<option value='"+a+"'"+b+">"+a+"</option>"))}setupWorldFromMap(availableWorlds[startingWorldName]),refresh(),$(".button-move").on("click",function(){move()}),$(".button-turn-left").on("click",function(){turnLeft()}),$(".button-turn-right").on("click",function(){turnRight()}),$(".button-turn-around").on("click",function(){turnAround()}),$(".button-pick-beeper").on("click",function(){pickBeeper()}),$(".button-put-beeper").on("click",function(){putBeeper()}),$(".place-beeper-button").on("click",function(){updateMouseMode("PLACE_BEEPER",$(".add-beeper-button"))}),$(".add-beeper-button").on("click",function(a){updateMouseMode("PLACE_BEEPER",$(a.target))}),$(".remove-beeper-button").on("click",function(a){updateMouseMode("REMOVE_BEEPER",$(a.target))}),$(".place-wall-button").on("click",function(){updateMouseMode("ADD_WALL",$(".add-wall-button"))}),$(".add-wall-button").on("click",function(a){updateMouseMode("ADD_WALL",$(a.target))}),$(".remove-wall-button").on("click",function(a){updateMouseMode("REMOVE_WALL",$(a.target))}),$(".karel-controls").on("click",function(){updateMouseMode("KAREL")}),$(".beepers-in-bag-count").on("keydown",function(a){13===a.keyCode&&a.target.blur()}),$(".laser-button").on("click",function(){laserPointerTriggered()}),$(".highlight-squares").on("click",function(){highlightSquaresTriggered()}),$(".beepers-in-bag-count").on("blur",function(){var a;try{a=$(".beepers-in-bag-count").nodes[0].value.trim(),a=""==a?void 0:parseInt(a)}catch(a){setError("That's not a valid number.")}a===void 0?(beepersInBag=-1,refresh()):0<=a?(beepersInBag=a,refresh()):setError("That's not a valid number.")}),$(".update-world-size-button").on("click",function(){parseWorldDimensions()}),$(".dimension-input input").on("keydown",function(a){13===a.keyCode&&(parseWorldDimensions(),a.target.blur())}),$(".upload-map").on("change",function(a){console.log(a.target.files),a.target.files&&loadKarelMapFile(a.target.files[0])}),$(".select-available-world").on("change",function(a){var b=a.target.value;try{setupWorldFromMap(availableWorlds[b])}catch(a){logging.error(a),setError("Error while trying to load this world.")}}),$(".world").on("click",function(a){var e,f,b=Math.PI,c=Math.atan2,d=Math.floor,g=$(a.target).closest(".world").find(".landscape");if(1==g.nodes.length){var h=g.nodes[0],i=h.getBoundingClientRect();e=a.clientX-i.left,f=a.clientY-i.top}var j=d(f/squareSize),k=d(e/squareSize);if(inBounds(j,k)){var l,m=e-(k*squareSize+squareSize/2),n=-1*(f-(j*squareSize+squareSize/2)),o=180*(c(n,m)/b);if(l=45<=o&&135>=o?"north":135<=o||-135>=o?"west":45>=o&&-45<=o?"east":"south",clearErrors(),"KAREL"==mouseMode)j!=karelRow||k!=karelCol?moveTo(j,k,!0):turnLeft();else if("PLACE_BEEPER"==mouseMode)addBeeperToWorld(j,k);else if("REMOVE_BEEPER"==mouseMode)removeBeeperFromWorld(j,k);else if("ADD_WALL"==mouseMode)"north"==l?addWallToWorld("horizontal",j,k):"south"==l?addWallToWorld("horizontal",j+1,k):"west"==l?addWallToWorld("vertical",j,k):"east"==l&&addWallToWorld("vertical",j,k+1);else if("REMOVE_WALL"==mouseMode)"north"==l?removeWallFromWorld("horizontal",j,k):"south"==l?removeWallFromWorld("horizontal",j+1,k):"west"==l?removeWallFromWorld("vertical",j,k):"east"==l&&removeWallFromWorld("vertical",j,k+1);else if("HIGHLIGHT_SQUARES"==mouseMode){var p=$("."+getSquareClass(j,k));p.toggleClass("highlighted-square")}}})}),document.addEventListener("mousemove",function(a){"LASER_POINTER"==mouseMode&&$(".laser-pointer").attr("style","display: block; top: "+a.pageY+"; left: "+a.pageX)}),document.addEventListener("keydown",function(a){a.key;70==a.keyCode?move():68==a.keyCode?turnLeft():83==a.keyCode?turnRight():65==a.keyCode?turnAround():82==a.keyCode?putBeeper():69==a.keyCode?pickBeeper():71==a.keyCode?laserPointerTriggered():72==a.keyCode&&highlightSquaresTriggered()}),world_1x1="Dimension: (1, 1)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75",world_1x8="Dimension: (1, 8)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75",world_2x2="Dimension: (2, 2)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_2x8="Dimension: (2, 8)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_3x5="Dimension: (3, 5)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_40x40="Dimension: (40, 40)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 1.00\n",world_5x3="Dimension: (5, 3)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_5x5="Dimension: (5, 5)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_6x5="Dimension: (6, 5)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75\n",world_7x7="Dimension: (7, 7)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75\n",world_8x1="Dimension: (8, 1)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75",world_8x2="Dimension: (8, 2)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_8x8="Dimension: (8, 8)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75\n",world_CheckerboardKarel="Dimension: (8, 8)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75\n",world_CollectNewspaperKarel="Dimension: (7, 5)\nWall: (3, 2); west\nWall: (3, 2); south\nWall: (3, 3); west\nWall: (3, 4); west\nWall: (3, 5); south\nWall: (4, 2); south\nWall: (4, 5); south\nWall: (5, 2); south\nWall: (5, 5); south\nWall: (6, 2); west\nWall: (6, 4); west\nBeeper: (6, 3); 1\nKarel: (3, 4); east\nSpeed: 0.00",world_DefaultWorld="Dimension: (8, 8)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75",world_ExtensionKarel="Dimension: (20, 20)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 1.00\n",world_Midpoint1="Dimension: (1, 1)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.75",world_Midpoint2="Dimension: (2, 2)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_Midpoint8="Dimension: (8, 10)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_MidpointFindingKarel="Dimension: (9, 9)\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.50\n",world_MidpointKarel="Dimension: (5, 5)\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_SampleQuad1="Dimension: (13, 9)\nBeeper: (1, 1); 1\nBeeper: (1, 2); 1\nWall: (1, 4); South\nWall: (2, 4); West\nWall: (2, 5); South\nWall: (3, 4); West\nWall: (3, 4); South\nWall: (4, 4); West\nWall: (4, 5); South\nBeeper: (5, 1); 1\nWall: (5, 5); West\nBeeper: (5, 5); 1\nWall: (5, 6); South\nWall: (6, 5); West\nWall: (6, 5); South\nWall: (7, 4); West\nWall: (7, 4); South\nWall: (8, 3); West\nWall: (8, 3); South\nWall: (9, 2); West\nWall: (9, 2); South\nWall: (10, 2); West\nWall: (10, 3); South\nWall: (11, 3); West\nWall: (11, 4); South\nWall: (12, 4); West\nWall: (12, 5); South\nBeeper: (13, 1); 1\nBeeper: (13, 3); 1\nWall: (13, 4); West\nWall: (13, 4); South\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.5\n",world_SampleQuad2="Dimension: (13, 9)\nBeeper: (1, 1); 1\nBeeper: (1, 2); 1\nWall: (1, 4); South\nWall: (2, 4); West\nWall: (2, 5); South\nWall: (3, 4); West\nWall: (3, 4); South\nWall: (4, 4); West\nWall: (4, 5); South\nBeeper: (5, 2); 1\nWall: (5, 5); West\nBeeper: (5, 3); 1\nWall: (5, 6); South\nWall: (6, 5); West\nWall: (6, 5); South\nWall: (7, 4); West\nWall: (7, 4); South\nWall: (8, 3); West\nWall: (8, 3); South\nWall: (9, 2); West\nWall: (9, 2); South\nWall: (10, 2); West\nWall: (10, 3); South\nWall: (11, 3); West\nWall: (11, 4); South\nWall: (12, 4); West\nWall: (12, 5); South\nBeeper: (13, 4); 1\nBeeper: (13, 2); 1\nWall: (13, 4); West\nWall: (13, 4); South\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.5\n",world_StoneMasonKarel="Dimension: (13, 8)\nBeeper: (1, 4); 1\nBeeper: (1, 5); 1\nWall: (1, 6); South\nWall: (2, 6); West\nWall: (2, 7); South\nWall: (3, 7); West\nWall: (3, 8); South\nWall: (4, 7); West\nWall: (4, 7); South\nBeeper: (5, 1); 1\nBeeper: (5, 2); 1\nBeeper: (5, 4); 1\nWall: (5, 6); West\nWall: (5, 6); South\nWall: (6, 6); West\nWall: (6, 7); South\nWall: (7, 7); West\nWall: (7, 8); South\nWall: (8, 7); West\nWall: (8, 7); South\nBeeper: (9, 3); 1\nBeeper: (9, 5); 1\nWall: (9, 6); West\nWall: (9, 6); South\nWall: (10, 6); West\nWall: (10, 7); South\nWall: (11, 7); West\nWall: (11, 8); South\nWall: (12, 7); West\nWall: (12, 7); South\nBeeper: (13, 1); 1\nBeeper: (13, 3); 1\nBeeper: (13, 5); 1\nWall: (13, 6); West\nWall: (13, 6); South\nBeeperBag: INFINITY\nKarel: (1, 1); East\nSpeed: 0.5\n",world_Triple1="Dimension: (10, 8)\nWall: (6, 6); west\nWall: (5, 4); west\nWall: (6, 6); east\nWall: (5, 5); south\nWall: (3, 5); west\nWall: (6, 6); south\nWall: (5, 4); south\nWall: (3, 6); south\nWall: (4, 5); west\nWall: (3, 5); south\nWall: (5, 4); east\nWall: (6, 7); south\nKarel: (3, 6); west\nBeeperBag: INFINITY",world_Triple2="Dimension: (25, 13)\nWall: (16, 8); east\nWall: (3, 5); north\nWall: (18, 10); north\nWall: (3, 7); east\nWall: (20, 9); east\nWall: (7, 5); south\nWall: (17, 6); north\nWall: (17, 10); west\nWall: (16, 7); east\nWall: (15, 4); north\nWall: (8, 5); south\nWall: (10, 4); north\nWall: (6, 5); south\nWall: (13, 5); north\nWall: (20, 7); east\nWall: (2, 9); east\nWall: (17, 9); west\nWall: (2, 10); east\nWall: (3, 10); east\nWall: (19, 7); south\nWall: (3, 6); west\nWall: (3, 10); north\nWall: (5, 5); north\nWall: (3, 9); east\nWall: (9, 5); north\nWall: (20, 8); east\nWall: (19, 10); north\nWall: (2, 7); east\nWall: (12, 4); north\nWall: (16, 5); north\nWall: (14, 4); north\nWall: (10, 5); north\nWall: (16, 4); north\nWall: (12, 6); south\nWall: (20, 7); south\nWall: (15, 5); north\nWall: (3, 6); east\nWall: (13, 4); north\nWall: (2, 8); east\nWall: (16, 5); east\nWall: (6, 5); north\nWall: (17, 10); north\nWall: (8, 5); north\nWall: (5, 5); west\nWall: (7, 5); north\nWall: (11, 4); north\nWall: (18, 6); north\nWall: (20, 11); south\nWall: (11, 5); north\nWall: (9, 4); north\nWall: (20, 10); east\nWall: (5, 5); south\nWall: (3, 8); east\nWall: (14, 5); north\nKarel: (3, 11); west\nBeeperBag: INFINITY",world_Triple3="Dimension: (15, 10)\nWall: (10, 6); west\nWall: (12, 5); south\nWall: (4, 8); west\nWall: (7, 8); east\nWall: (6, 8); north\nWall: (9, 3); north\nWall: (10, 5); south\nWall: (5, 3); north\nWall: (13, 6); north\nWall: (7, 4); south\nWall: (4, 7); west\nWall: (4, 8); north\nWall: (6, 4); south\nWall: (8, 7); west\nWall: (12, 6); north\nWall: (11, 5); south\nWall: (9, 3); west\nWall: (9, 5); east\nWall: (13, 6); east\nWall: (11, 6); north\nWall: (4, 5); west\nWall: (9, 2); north\nWall: (4, 4); west\nWall: (10, 6); north\nWall: (8, 4); west\nWall: (9, 3); east\nWall: (7, 9); south\nWall: (13, 5); east\nWall: (4, 3); north\nWall: (13, 5); south\nWall: (4, 6); west\nWall: (5, 8); north\nWall: (7, 5); east\nWall: (7, 6); east\nKarel: (7, 9); west\nBeeperBag: INFINITY",world_TripleKarel="Dimension: (12, 11)\nWall: (10, 7); south\nWall: (9, 4); east\nWall: (9, 9); east\nWall: (9, 2); north\nWall: (9, 7); east\nWall: (7, 5); west\nWall: (7, 3); west\nWall: (11, 8); east\nWall: (7, 4); west\nWall: (3, 8); north\nWall: (11, 7); east\nWall: (6, 6); west\nWall: (1, 7); east\nWall: (2, 8); north\nWall: (7, 5); north\nWall: (12, 9); west\nWall: (9, 8); east\nWall: (1, 8); east\nWall: (7, 2); north\nWall: (5, 8); north\nWall: (6, 8); west\nWall: (4, 8); north\nWall: (6, 7); west\nWall: (3, 6); south\nWall: (8, 3); south\nWall: (2, 6); south\nWall: (9, 6); south\nWall: (9, 5); east\nWall: (5, 6); south\nWall: (2, 6); west\nWall: (9, 3); east\nWall: (10, 10); south\nWall: (11, 9); north\nWall: (8, 6); south\nWall: (4, 6); south\nWall: (11, 7); south\nKarel: (5, 9); west\nBeeperBag: INFINITY",world_HospitalKarel="Dimension: (15, 6)\nBeeper: (3, 1); 1\nBeeper: (9, 1); 1\nBeeper: (14, 1); 1\nKarel: (1, 1); east\nBeeperBag: INFINITY",world_Hospitals1="Dimension: (20, 4)\nBeeper: (3, 1); 1\nBeeper: (9, 1); 1\nBeeper: (19, 1); 1\nKarel: (1, 1); east\nBeeperBag: INFINITY",availableWorlds={CheckerboardKarel:world_CheckerboardKarel,CollectNewspaperKarel:world_CollectNewspaperKarel,DefaultWorld:world_DefaultWorld,ExtensionKarel:world_ExtensionKarel,HospitalKarel:world_HospitalKarel,Hospitals1:world_Hospitals1,Midpoint1:world_Midpoint1,Midpoint2:world_Midpoint2,Midpoint8:world_Midpoint8,MidpointFindingKarel:world_MidpointFindingKarel,MidpointKarel:world_MidpointKarel,SampleQuad1:world_SampleQuad1,SampleQuad2:world_SampleQuad2,StoneMasonKarel:world_StoneMasonKarel,Triple1:world_Triple1,Triple2:world_Triple2,Triple3:world_Triple3,TripleKarel:world_TripleKarel,"1x1":world_1x1,"1x8":world_1x8,"2x2":world_2x2,"2x8":world_2x8,"3x5":world_3x5,"5x3":world_5x3,"5x5":world_5x5,"6x5":world_6x5,"7x7":world_7x7,"8x1":world_8x1,"8x2":world_8x2,"8x8":world_8x8};